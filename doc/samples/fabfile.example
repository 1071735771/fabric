#
# Typical Fabric deployment file -- SuperApp example.
# run it like this in a console: $fab staging deploy
# Requires that Fabric (and python) is installed:
#  1. Install Python (http://www.python.org or through package manager).
#  2. Install Fabric ($easy_install Fabric)
#  3. You're done!
#
# Example uses:
#  * Deploying to staging without too much fuss:
#    $ fab staging deploy:fully,undercover
#
#  * Preparing proper nightly deployment on production:
#    $ fab let:from-version=1.1.2,to-version=1.1.3 deploy
#

config(
    project = 'SuperApp',
    server_dir = '/usr/local/$(fab_host)/server/$(fab_host)',
    backup_dir = '/var/deploy_backup/$(project)-$(from_version)',
    deploy_dir = '/var/deploy_files/$(project)-$(to_version)',
    do_deploy_from_dir = '.',
)

def production():
    "Configures Fabric for production environment."
    config.env = 'production'
    config.fab_hosts = ['n1.sa.servers.com','n2.sa.servers.com']

def staging():
    "Configures Fabric for Staging environment."
    config.env = 'staging'
    config.fab_hosts = ['n1.sa.st.servers.com','n2.sa.st.servers.com']

def build():
    local('mvn clean package')

def upload():
    require('env', provided_by=[production,staging])
    put('src/$(project).$(env).properties', '$(project).properties')
    put('target/$(project).war', '$(project).war')

def deploy(fully=False, undercover=False, no_build=False):
    "Build the project and deploy it to a specified environment."
    require('env', provided_by=[production,staging])
    if not no_build:
        build()
    upload()
    if not undercover:
        ready_backup()
        ready_deploy()
    if fully:
        stop()
        do_deploy()
        start()

def ready_backup():
    require('from_version')
    sudo('mkdir -p $(backup_dir)', fail='warn')
    sudo('chmod a+rw $(backup_dir)')
    run('cp $(server_dir)/deploy/$(project).war $(backup_dir)')
    run('cp $(server_dir)/conf/$(project).properties $(backup_dir)')

def ready_deploy():
    require('to_version')
    sudo('mkdir -p $(deploy_dir)', fail='warn')
    sudo('chmod a+rw $(deploy_dir)')
    run('cp $(project).war $(deploy_dir)')
    run('cp $(project).properties $(deploy_dir)')
    config.do_deploy_from_dir = '$(deploy_dir)'

def stop():
    sudo('$(fab_host) stop')

def do_deploy():
    sudo('cp $(do_deploy_from_dir)/$(project).war $(server_dir)/deploy')
    sudo('cp $(do_deploy_from_dir)/$(project).properties $(server_dir)/conf')

def start():
    sudo('$(fab_host) start')

