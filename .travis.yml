language: python
sudo: required
dist: trusty
cache:
  directories:
    - $HOME/.cache/pip
python:
#  - "2.6"
  - "2.7"
#  - "3.3"
#  - "3.4"
#  - "3.5"
#  - "3.6"
#  - "pypy"
#  - "pypy3"
#matrix:
#  # pypy3 (as of 2.4.0) has a wacky arity issue in its source loader. Allow it
#  # to fail until we can test on, and require, PyPy3.3+. See
#  # pyinvoke/invoke#358.
#  allow_failures:
#    - python: pypy3
#  fast_finish: true
install:
  # TODO: real test matrix with at least some cells combining different invoke
  # and/or paramiko versions, released versions, etc
  # Invoke from master for parity
  - "pip install -e git+https://github.com/pyinvoke/invoke#egg=invoke"
  # Paramiko ditto
  - "pip install -e git+https://github.com/paramiko/paramiko#egg=paramiko"
  # Self
  - pip install -e .
  # Dev requirements
  # TODO: follow invoke and split it up a bit so we're not pulling down
  # conflicting or unused-by-travis deps?
  - pip install -r dev-requirements.txt
  # Sanity test of the Invoke layer, if that's busted everything is
  - inv --list
  # Sanity test of Fabric itself
  - fab --version
before_script:
  # Create passworded sudoable user for sudo autoresponse testing. Put it in
  # the Travis user's group so it can read /home/travis for virtualenv etc.
  # Make sure to create its home directory as it must host SSH files.
  - sudo useradd sudouser -m -G travis
  - "echo sudouser:mypass | sudo chpasswd"
  - "sudo sh -c \"echo 'sudouser   ALL=(ALL:ALL) PASSWD:ALL' > /etc/sudoers.d/passworded\""
  # Make sure sudouser can write to travis' homedir (used for some config
  # tests)
  - sudo chmod g+w /home/travis
  # Allow us to SSH passwordless to localhost
  - sudo -u sudouser ssh-keygen -f ~sudouser/.ssh/id_rsa -N ""
  - sudo cp ~sudouser/.ssh/{id_rsa.pub,authorized_keys}
script:
  # Run unit and integration tests, generating coverage report (skipping html).
  # NOTE: Using the above-created passworded sudo-capable user so that
  # sudo-related integration tests work as expected. (Otherwise, sudo prompt
  # response will not be properly tested!)
  # NOTE: using sudo -H to enforce target user homedir use for e.g SSH keys
  # NOTE: This command will fail if the tests fail.
  - "sudo -H -u sudouser bash -c \"source $VIRTUAL_ENV/bin/activate && inv coverage --no-html\""
  # Websites build OK? (Not on PyPy3, Sphinx is all "who the hell are you?" =/
  - "[[ $TRAVIS_PYTHON_VERSION != 'pypy3' ]] && inv sites"
  # Did we break setup.py?
  - pip uninstall -y fabric # To undo the implicit -e install from above
  - pip install . # NO -e!
  - fab --version # Sanity check
  # I have this in my git pre-push hook, but contributors probably don't
  - flake8
after_success:
  # TODO: this should all become a task, sheesh
  # Test distribution builds.
  # Have to use env var to override our normal config defaults. Ho hum.
  - "INVOKE_PACKAGING_SIGN=0 inv release.publish --dry-run --directory=tmp"
  # Wheel
  - pip uninstall -y fabric
  - pip install tmp/dist/*.whl
  - fab --version
  # Source distribution
  - pip uninstall -y fabric
  - pip install tmp/dist/*.tar.gz
  - fab --version
  # Again, but as 'fabric2'
  - rm -rf tmp
  - "INVOKE_PACKAGING_SIGN=0 PACKAGE_AS_FABRIC2=yes inv release.publish --dry-run --directory=tmp"
  - pip uninstall -y fabric
  - pip install tmp/dist/*.whl
  - fab2 --version
  - pip uninstall -y fabric2
  - pip install tmp/dist/*.tar.gz
  - fab2 --version
after_script:
  # Upload coverage data to codecov
  - codecov
notifications:
  # TODO: enable
  #  irc:
  #    channels: "irc.freenode.org#fabric"
  #    template:
  #      - "%{repository}@%{branch}: %{message} (%{build_url})"
  #    on_success: change
  #    on_failure: change
  email: false
