======
Fabric
======


About
=====

.. include:: ../README


Installation
=====================

.. warning::

    Fabric's primary dependency, Paramiko, has a severe bug in its latest
    version.  Please see the :doc:`usage/installation` page for more details
    before using ``easy_install`` or ``pip`` to install Fabric!

Stable releases of Fabric are best installed via ``easy_install`` or ``pip``;
or you may download TGZ or ZIP source archives from a couple of official
locations. Detailed instructions and links may be found on the
:doc:`usage/installation` page.

We recommend using the latest stable version of Fabric; releases are made often
to prevent any large gaps in functionality between the latest stable release
and the development version.

However, if you want to live on the edge, you can pull down the latest source
code from our Git repository, or fork us on Github. The
:doc:`usage/installation` page has details for how to access the source code;
there is also a documentation section on :doc:`usage/development` with
important information about Fabric's development process.


Documentation
=============

Please note that all documentation is currently written with Python 2.5 users
in mind, but with an eye for eventual Python 3.x compatibility. This leads to
the following patterns that may throw off readers used to Python 2.4 or who
have already upgraded to Python 2.6:

* ``from __future__ import with_statement``: a "future import" required to
  use the ``with`` statement in Python 2.5 -- a feature you'll be using
  frequently. Python 2.6 users don't need to do this.
* ``<true_value> if <expression> else <false_value>``: Python's relatively new
  ternary statement, available in 2.5 and newer. Python 2.4 and older used to
  fake this with ``<expression> and <true_value> or <false_value>``.
* ``print(<expression>)`` instead of ``print <expression>``: We use the
  ``print`` statement's optional parentheses where possible, in order to be
  more compatible with Python 3.x (in which ``print`` becomes a function.)

Tutorial
--------

For new users, and/or for an overview of Fabric's basic functionality, please
see the :doc:`usage/tutorial`. The rest of the documentation will assume you're
at least passingly familiar with the material contained within.

.. _usage-docs:

Usage documentation
-------------------

The following list contains all major sections of Fabric's prose (non-API)
documentation, which expands upon the concepts outlined in the
:doc:`usage/tutorial` and also covers advanced topics.

.. toctree::
    :maxdepth: 1
    :glob:

    usage/*

.. _api_docs:

API documentation
-----------------

Fabric maintains two sets of API documentation, autogenerated from the source
code's docstrings (which are typically very thorough.)

.. _core-api:

Core API
~~~~~~~~

The **core** API is loosely defined as those functions, classes and methods
which form the basic building blocks of Fabric (such as
`~fabric.operations.run` and `~fabric.operations.sudo`) upon which everything
else (the below "contrib" section, and user fabfiles) builds.

.. toctree::
    :maxdepth: 1
    :glob:

    api/*

.. _contrib-api:

Contrib API
~~~~~~~~~~~

Fabric's **contrib** package contains commonly useful tools (often merged in
from user fabfiles) for tasks such as user I/O, modifying remote files, and so
forth. While the core API is likely to remain small and relatively unchanged
over time, this contrib section will grow and evolve (while trying to remain
backwards-compatible) as more use-cases are solved and added.

.. toctree::
    :maxdepth: 1
    :glob:

    contrib/*

Changes from previous versions
------------------------------

.. toctree::
    :maxdepth: 1
    :glob:

    changes/*

Getting help
============

If you've scoured the :ref:`prose <usage-docs>` and :ref:`API <api_docs>`
documentation and still can't find an answer to your question, below are
various support resources that should help. We do request that you do at least
skim the documentation before posting tickets or mailing list questions,
however!

Mailing list
------------

The best way to get help with using Fabric is via the `fab-user mailing list
<http://lists.nongnu.org/mailman/listinfo/fab-user>`_ (currently hosted at
``nongnu.org``.) The Fabric developers do their best to reply promptly, and the
list contains an active community of other Fabric users and contributors as
well.

.. _bugs:

Bugs/ticket tracker
-------------------

To file new bugs or search existing ones, you may visit Fabric's `Redmine
<http://redmine.org>`_ instance, located at `code.fabfile.org
<http://code.fabfile.org>`_. Due to issues with spam, you'll need to (quickly
and painlessly) register an account in order to post new tickets.

Wiki
----

There is an official Fabric `MoinMoin <http://moinmo.in>`_ wiki reachable at
`wiki.fabfile.org <http://wiki.fabfile.org>`_, although as of this writing its
usage patterns are still being worked out. Like the ticket tracker, spam has
forced us to put anti-spam measures up; the wiki has a simple, easy captcha in
place on the edit form.
